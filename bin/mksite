#!/usr/bin/env python3

import pathlib
import shutil

import markdown

PAGES_DIR = pathlib.Path("./pages")
STATIC_DIR = pathlib.Path("./static")
DEST_DIR = pathlib.Path("./build")
PAGE_TEMPLATE = pathlib.Path('./template.html')


def _list_files(path):
    return filter(lambda x: x.is_file(), path.glob('**/*'))


def convert_markdown_to_html(raw_markdown, path_to_root):
    html_body = markdown.markdown(raw_markdown)

    with PAGE_TEMPLATE.open() as fileobj:
        template = fileobj.read()

    html = (template
        .replace('{{BODY}}', html_body)
        .replace('{{PATH_TO_ROOT}}', path_to_root)
    )
    return html


def build_markdown(rel_src_file_path, abs_dest_file_path):
    with open(PAGES_DIR / rel_src_file_path) as fileobj:
        raw_markdown = fileobj.read()

    path_to_root = '/'.join('..' for _ in range(len(rel_src_file_path.parts) - 1))
    html = convert_markdown_to_html(raw_markdown, path_to_root)

    with abs_dest_file_path.open('w') as fileobj:
        fileobj.write(html)


def build_html(rel_src_file_path, abs_dest_file_path):
    shutil.copy(PAGES_DIR / rel_src_file_path, abs_dest_file_path)


def build_page(src_file_path):
    rel_src_file_path = src_file_path.relative_to(PAGES_DIR)
    abs_dest_file_path = DEST_DIR / rel_src_file_path.with_suffix('.html')
    print(f'Building {rel_src_file_path}...')

    if not abs_dest_file_path.parent.exists():
        abs_dest_file_path.parent.mkdir(parents=True)

    src_extension = src_file_path.suffix
    if src_extension == '.md':
        build_markdown(rel_src_file_path, abs_dest_file_path)
    elif src_extension == '.html':
        build_html(rel_src_file_path, abs_dest_file_path)
    else:
        raise RuntimeError(f'Unknown extension: {src_file_path}')


def build_website():
    pathlib.Path(DEST_DIR).mkdir(exist_ok=True)

    src_file_paths = _list_files(PAGES_DIR)
    for src_file_path in src_file_paths:
        build_page(src_file_path)

    shutil.copytree(STATIC_DIR, DEST_DIR / 'static', dirs_exist_ok=True)


if __name__ == "__main__":
    build_website()
